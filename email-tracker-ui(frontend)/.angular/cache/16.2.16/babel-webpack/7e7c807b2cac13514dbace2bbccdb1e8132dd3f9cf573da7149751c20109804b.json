{"ast":null,"code":"import { createEffect, ofType } from '@ngrx/effects';\nimport * as EmailActions from './email.actions';\nimport { catchError, map, mergeMap, of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ngrx/effects\";\nimport * as i2 from \"../services/email.service\";\nexport let EmailEffects = /*#__PURE__*/(() => {\n  class EmailEffects {\n    constructor(actions$, emailService) {\n      this.actions$ = actions$;\n      this.emailService = emailService;\n      this.loadEmails$ = createEffect(() => this.actions$.pipe(ofType(EmailActions.loadEmails), mergeMap(() => this.emailService.getEmails().pipe(map(emails => EmailActions.loadEmailsSuccess({\n        emails\n      })), catchError(error => of(EmailActions.loadEmailsFailure({\n        error\n      })))))));\n    }\n    static {\n      this.ɵfac = function EmailEffects_Factory(t) {\n        return new (t || EmailEffects)(i0.ɵɵinject(i1.Actions), i0.ɵɵinject(i2.EmailService));\n      };\n    }\n    static {\n      this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n        token: EmailEffects,\n        factory: EmailEffects.ɵfac\n      });\n    }\n  }\n  return EmailEffects;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}